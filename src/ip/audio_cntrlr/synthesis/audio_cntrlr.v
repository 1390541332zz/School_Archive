// audio_cntrlr.v

// Generated using ACDS version 17.0 595

`timescale 1 ps / 1 ps
module audio_cntrlr (
		input  wire [15:0] audio_0_to_dac_left_channel_data,     //    audio_0_avalon_left_channel_sink.data
		input  wire        audio_0_to_dac_left_channel_valid,    //                                    .valid
		output wire        audio_0_to_dac_left_channel_ready,    //                                    .ready
		input  wire        audio_0_from_adc_left_channel_ready,  //  audio_0_avalon_left_channel_source.ready
		output wire [15:0] audio_0_from_adc_left_channel_data,   //                                    .data
		output wire        audio_0_from_adc_left_channel_valid,  //                                    .valid
		input  wire [15:0] audio_0_to_dac_right_channel_data,    //   audio_0_avalon_right_channel_sink.data
		input  wire        audio_0_to_dac_right_channel_valid,   //                                    .valid
		output wire        audio_0_to_dac_right_channel_ready,   //                                    .ready
		input  wire        audio_0_from_adc_right_channel_ready, // audio_0_avalon_right_channel_source.ready
		output wire [15:0] audio_0_from_adc_right_channel_data,  //                                    .data
		output wire        audio_0_from_adc_right_channel_valid, //                                    .valid
		input  wire        audio_0_AUD_BCLK,                     //          audio_0_external_interface.BCLK
		output wire        audio_0_AUD_DACDAT,                   //                                    .DACDAT
		input  wire        audio_0_AUD_DACLRCK,                  //                                    .DACLRCK
		input  wire        audio_0_reset,                        //                       audio_0_reset.reset
		input  wire        clk_clk,                              //                                 clk.clk
		input  wire        reset_reset_n                         //                               reset.reset_n
	);

	audio_cntrlr_audio_0 audio_0 (
		.clk                          (clk_clk),                              //                         clk.clk
		.reset                        (audio_0_reset),                        //                       reset.reset
		.from_adc_left_channel_ready  (audio_0_from_adc_left_channel_ready),  //  avalon_left_channel_source.ready
		.from_adc_left_channel_data   (audio_0_from_adc_left_channel_data),   //                            .data
		.from_adc_left_channel_valid  (audio_0_from_adc_left_channel_valid),  //                            .valid
		.from_adc_right_channel_ready (audio_0_from_adc_right_channel_ready), // avalon_right_channel_source.ready
		.from_adc_right_channel_data  (audio_0_from_adc_right_channel_data),  //                            .data
		.from_adc_right_channel_valid (audio_0_from_adc_right_channel_valid), //                            .valid
		.to_dac_left_channel_data     (audio_0_to_dac_left_channel_data),     //    avalon_left_channel_sink.data
		.to_dac_left_channel_valid    (audio_0_to_dac_left_channel_valid),    //                            .valid
		.to_dac_left_channel_ready    (audio_0_to_dac_left_channel_ready),    //                            .ready
		.to_dac_right_channel_data    (audio_0_to_dac_right_channel_data),    //   avalon_right_channel_sink.data
		.to_dac_right_channel_valid   (audio_0_to_dac_right_channel_valid),   //                            .valid
		.to_dac_right_channel_ready   (audio_0_to_dac_right_channel_ready),   //                            .ready
		.AUD_BCLK                     (audio_0_AUD_BCLK),                     //          external_interface.export
		.AUD_DACDAT                   (audio_0_AUD_DACDAT),                   //                            .export
		.AUD_DACLRCK                  (audio_0_AUD_DACLRCK)                   //                            .export
	);

endmodule
